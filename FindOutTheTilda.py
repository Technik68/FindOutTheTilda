import tkinter as tk
from tkinter import messagebox, filedialog, Scrollbar, Text
import requests
from bs4 import BeautifulSoup


input_file = ''
output_file = ''


def is_tilda_site(url):
    try:
        response = requests.get(url)
        response.raise_for_status()
        soup = BeautifulSoup(response.text, 'html.parser')

        if soup.find('meta', {'name': 'generator', 'content': 'Tilda'}):
            return True
        if soup.find('link', {'href': lambda x: x and 'tildacdn.com' in x}):
            return True
        if soup.find_all(class_=lambda x: x and x.startswith('t-')):
            return True
        if 'This site was made on Tilda' in response.text:
            return True
        return False
    except Exception as e:
        return None


def get_site_name(url):
    try:
        response = requests.get(url)
        response.raise_for_status()
        soup = BeautifulSoup(response.text, 'html.parser')
        title = soup.find('title')
        return title.text.strip() if title else "–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    except Exception as e:
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è"


def check_sites():
    urls = entry_urls.get("1.0", tk.END).splitlines()
    results_text.delete(1.0, tk.END)  # –û—á–∏—â–∞–µ–º –±–ª–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

    urls = [url.strip() for url in urls if url.strip()]

    if not urls:
        messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ –≤–≤–µ–¥–µ–Ω—ã URL.")
        return

    results = []
    for url in urls:
        site_name = get_site_name(url)
        is_tilda = is_tilda_site(url)

        if is_tilda is None:
            status = "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏"
        elif is_tilda:
            status = "‚úÖ –ù–∞ Tilda"
        else:
            status = "‚ùå –ù–µ –Ω–∞ Tilda"

        result_line = f"{'-' * 50}\n"
        result_line += f"üìç URL: {url}\n"
        result_line += f"üè∑ –ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞: {site_name}\n"
        result_line += f"‚úÖ –°—Ç–∞—Ç—É—Å: {status}\n"
        result_line += f"{'-' * 50}\n\n"

        results_text.insert(tk.END, result_line)
        results.append(result_line)

    if output_file:
        try:
            with open(output_file, 'w', encoding='utf-8') as f:
                f.write("\n".join(results))
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª: {e}")


def bind_ctrl_v(event):
    event.widget.event_generate("<<Paste>>")


def select_input_file():
    global input_file
    input_file = filedialog.askopenfilename(filetypes=[("Text files", "*.txt")])
    if input_file:
        try:
            with open(input_file, 'r', encoding='utf-8') as f:
                urls = f.read().splitlines()
                entry_urls.delete('1.0', tk.END)
                entry_urls.insert(tk.END, "\n".join(urls))
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª: {e}")


def select_output_file():
    global output_file
    output_file = filedialog.asksaveasfilename(defaultextension=".txt",
                                               filetypes=[("Text files", "*.txt")])
    if not output_file:
        output_file = ''


# –í–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
root = tk.Tk()
root.title('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–æ–≤ –Ω–∞ Tilda')

tk.Label(root, text="–í–≤–µ–¥–∏—Ç–µ URL –≤ –±–ª–æ–∫ —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É:").pack()

# –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ URL
entry_urls = Text(root, height=10)
entry_urls.pack(fill=tk.BOTH, padx=10, pady=10)

# –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ—á–µ—Ç–∞–Ω–∏–µ Ctrl+V
entry_urls.bind("<Control-v>", bind_ctrl_v)

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ö–æ–¥–Ω–æ–≥–æ –∏ –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
tk.Button(root, text="–í—ã–±—Ä–∞—Ç—å –≤—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª", command=select_input_file).pack(pady=5)
tk.Button(root, text="–í—ã–±—Ä–∞—Ç—å –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª", command=select_output_file).pack(pady=5)

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∞–π—Ç–æ–≤
tk.Button(root, text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å", command=check_sites).pack(pady=10)

# –ë–ª–æ–∫ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
tk.Label(root, text="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:").pack()

results_text = Text(root, height=20, font=('Courier', 12))
results_text.pack(fill=tk.BOTH, padx=10, pady=10)

root.mainloop()
